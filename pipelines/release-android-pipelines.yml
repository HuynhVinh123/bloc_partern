name: $(Date:yy)$(DayOfYear)$(Rev:rr)
trigger: none

resources:
  pipelines:
  - pipeline: tpos_mobile_android_ci  # Name of the pipeline resource
    source: tpos_mobile_android_ci # Name of the triggering pipeline
    trigger: 
      branches:
      - dev
      - master
      - namnv/setup_pipeline

variables:
  FlutterChannel: 'stable'
  FlutterVersion: 'latest'

  ProjectSlug: 'nam.nvnnb-hotmail.com/tpos_mobile>'
  ProjectDirectory: '$(Build.SourcesDirectory)/tpos_mobile'

  BuildNumber: '$(Build.BuildNumber)'
  AndroidBuildName: ''
  AndroidBuildNumber: ''
  BuildMessage: '$(Build.SourceVersionMessage)'

  BuildDirectory: '$(ProjectDirectory)\build\app\outputs\apk\release\app-release.apk'
  Build64Directory: '$(ProjectDirectory)\build\app\outputs\apk\release\app-arm64-v8a-release.apk'
  Build32Directory: '$(ProjectDirectory)\build\app\outputs\apk\release\app-armeabi-v7a-release.apk'
  Build86Directory: '$(ProjectDirectory)\build\app\outputs\apk\release\app-x86_64-release.apk'

  BuildArtifactFolder: '$(build.artifactStagingDirectory)/$(BuildNumber)'

  BuildArtifactApk: '$(build.artifactStagingDirectory)/drop/tpos_mobile/build/app/outputs/apk/release/app-release.apk'
  BuildArtifactApk64: '$(build.artifactStagingDirectory)/drop/tpos_mobile/build/app/outputs/apk/release/app-arm64-v8a-release.apk'
  BuildArtifactApk32: '$(build.artifactStagingDirectory)/drop/tpos_mobile/build/app/outputs/apk/release/app-armeabi-v7a-release.apk'
  BuildArtifactApk86: '$(build.artifactStagingDirectory)/drop/tpos_mobile/build/app/outputs/apk/release/app-x86_64-release.apk'

  BuildMessageFileName: '$(Build.SourcesDirectory)\temp\build_message$(BuildNumber).txt'
  ANDROID_SDK_ROOT: 'D:\namnv\Android\Sdk'
  CurrentDate: $(Get-Date -Format yy.MM.dd.HHmm)
  FirebaseCliPath: 'D:\agent\firebase-tools-instant-win.exe'
  FirebaseAppId: '1:852209026200:android:94d53e46d7dd6821'
  FirebaseTesterGroup: 'tmt-tester'
  
stages:
  - stage: Upload_Android
    displayName: 'Deploy apk for test.'
    jobs:
      - deployment: 
        environment: none
        displayName: 'Deploy Android'
        pool:
          name: 'namnv_agent'
          demands:
            - Agent.OS -equals Windows_NT
        strategy:
          runOnce:
            deploy:
              steps:
              # - task: DownloadBuildArtifacts@0
              #   inputs:
              #     buildType: 'current'
              #     downloadType: 'specific'
              #     itemPattern: '**/*.apk'
              #     downloadPath: '$(System.ArtifactsDirectory)'

              - download: tpos_android_build
                artifact: drop

              - task: CmdLine@2
                displayName: Install Firebase tool
                inputs:
                  script: 'npm install -g firebase-tools'

              - task: PowerShell@2
                displayName: Update npm PATH on Window
                inputs:
                  targetType: 'inline'
                  script: |
                    Write-Host "##vso[task.prependpath]C:\Windows\ServiceProfiles\NetworkService\AppData\Roaming\npm"

              - task: PowerShell@2
                displayName: 'Write build message to file'
                inputs:
                  targetType: 'inline'
                  script: |
                    New-Item $(BuildMessageFileName) -f -value '$(BuildMessage)'
                    Write-Host "Đã xong..."


              - task: PowerShell@2
                displayName: Upload apk to firebase distribution
                condition: | 
                    startsWith(variables['Build.SourceBranch'], 'refs/heads/')
                
                inputs:
                    targetType: 'inline'
                    script: |
                        firebase appdistribution:distribute $(BuildArtifactApk) --app $(FirebaseAppId) --token "$(firebaseToken)" --release-notes-file "$(BuildMessageFileName)" --groups "dev_tester" --debug

              - task: PowerShell@2
                displayName: Upload apk to firebase distribution
                condition: | 
                    startsWith(variables['Build.SourceBranch'], 'refs/pull/')
                inputs:
                    targetType: 'inline'
                    script: |
                        firebase appdistribution:distribute $(BuildArtifactApk) --app $(FirebaseAppId) --token "$(firebaseToken)" --release-notes-file "$(BuildMessageFileName)" --groups "pull_tester" --debug

              - task: PowerShell@2
                displayName: Upload to test apk distribution
                condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
                inputs:
                    targetType: 'inline'
                    script: |
                        firebase appdistribution:distribute $(BuildArtifactApk64) --app $(FirebaseAppId) --token "$(firebaseToken)" --release-notes "$(BuildMessageFileName)" --groups "$(FirebaseTesterGroup)" --debug
                        firebase appdistribution:distribute $(BuildArtifactApk32) --app $(FirebaseAppId) --token "$(firebaseToken)" --release-notes "$(BuildMessageFileName)" --groups "$(FirebaseTesterGroup)" --debug
                        firebase appdistribution:distribute $(BuildArtifactApk86) --app $(FirebaseAppId) --token "$(firebaseToken)" --release-notes "$(BuildMessageFileName)" --groups "$(FirebaseTesterGroup)" --debug
              - task: ExtractVersionFromTag@1
                displayName: 'Extract version from git tag'
                inputs:
                  projectFolderPath: '$(Build.SourcesDirectory)'

